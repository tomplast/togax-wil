import toga
from _typeshed import Incomplete
from typing import Optional

LINE_SYNTAX: Incomplete

class LineReader:
    def __init__(self, lines) -> None: ...
    @property
    def current_line_number(self): ...
    def get_current_line(self) -> Optional[str]: ...
    def peek_next_line(self) -> Optional[str]: ...
    def next(self) -> None: ...

def extract_line_parts(line): ...

class BreadcrumbAccessor:
    def __init__(self, widget: toga.Widget) -> None: ...
    def __getitem__(self, key) -> Optional[toga.Widget]: ...

def load_widget_from_string(string: str) -> toga.Widget: ...
